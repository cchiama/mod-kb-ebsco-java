#%RAML 1.0
title: mod-kb-ebsco-java
baseUri: https://github.com/folio-org/mod-kb-ebsco-java
protocols: [ HTTPS ]
version: v1
mediaType: "application/vnd.api+json"

documentation:
  - title: mod-kb-ebsco-java
    content: Implements the eholdings interface using EBSCO KB as backend.

traits:
  queriable: !include traits/queriable.raml
  sortable: !include traits/sortable.raml
  pageable: !include traits/pageable.raml
  filterable: !include traits/filterable.raml
  titleFilterable: !include traits/titlesFilterable.raml

types:
  customCoverage: # normal object type declaration
    type: object
    properties:
      beginCoverage: string
      endCoverage: string
    example: |
      {
        "beginCoverage": "2003-01-01",
        "endCoverage": "2003-12-01"
      }
  visibilityData:
    type: object
    properties:
      isHidden: boolean
    example: |
      {
        "isHidden": true
      }
  proxy:
    type: object
    properties:
      id: string
    example: |
      {
        "id": "EZ_Proxy"
      }

/eholdings/packages:
  displayName: Packages
  get:
    description: Retrieve a collection of packages based on the search query.
    is: [queriable, filterable, sortable, pageable]
    queryParameters:
      filter[custom]:
        displayName: Custom Packages List
        type: string
        enum: ["true"]
        description: Filter to get list of custom packages
        example: "true"
        required: false
    responses:
      200:
        description: OK
        body:
          application/vnd.api+json:
            example: !include examples/packages/packages_get_200_response.json
      400:
        description: Bad Request
        body:
          application/vnd.api+json:
            example: !include examples/packages/packages_get_400_response.json
  post:
    description: Create a custom package
    headers:
      Content-Type:
        example: application/vnd.api+json
    body:
      application/vnd.api+json:
        properties:
          data:
            description: Needed because of JSON API
            type: object
            required: true
            properties:
              type: string
              attributes:
                description: Needed because of JSON API
                type: object
                required: true
                properties:
                  name:
                    description: Name of the custom package to be created
                    type: string
                    example: My test package
                    required: true
                  contentType:
                    description: Content type of the custom package to be created
                    type: string
                    enum: ["Aggregated Full Text", "Abstract and Index", "E-Book", "E-Journal", "Print", "Online Reference", "Unknown"]
                    example: Unknown
                    required: true
                  customCoverage:
                    description: Coverage dates of the custom package to be created
                    type: customCoverage
                    required: false
        example: !include examples/packages/packages_post_request.json
    responses:
      200:
        description: OK
        body:
          application/vnd.api+json:
            example: !include examples/packages/packages_post_200_response.json
      400:
        description: Bad Request
        body:
          application/vnd.api+json:
              example: !include examples/packages/packages_post_400_response.json
  /{packageId}:
    uriParameters:
        packageId:
          description: identifier of the package formed from Provider Id and Package Id (see example)
          type: string
          example: 583-4345
    get:
      description: |
        Retrieve a specific package given packageId.
        Note that packageId is providerId-packageId
      queryParameters:
        include:
          displayName: Nested resources or provider
          type: string
          enum: ["resources", "provider"]
          description: Include resources or provider in response
          example: resources
          required: false
      responses:
        200:
          description: OK
          body:
            application/vnd.api+json:
              example: !include examples/packages/packages_packageId_get_200_response.json
        400:
          description: Bad Request
          body:
            application/vnd.api+json:
              example: !include examples/packages/packages_packageId_get_400_response.json
        404:
          description: Not Found
          body:
            application/vnd.api+json:
              example: !include examples/packages/packages_packageId_get_404_response.json
    put:
      description: |
        Update a managed or custom package using packageId
        Note that packageId is providerId-packageId
      headers:
        Content-Type:
          example: application/vnd.api+json
      body:
        application/vnd.api+json:
          properties:
            data:
              description: Needed because of JSON API
              type: object
              required: true
              properties:
                type: string
                attributes:
                  description: Needed because of JSON API
                  type: object
                  required: true
                  properties:
                    name:
                      description: |
                        Name of the custom package to be updated.
                        Note that this attribute can be updated ONLY FOR A CUSTOM PACKAGE.
                      type: string
                      example: My test package
                      required: true
                    contentType:
                      description: |
                        Content type of the custom package to be updated.
                        Note that this attribute can be updated ONLY FOR A CUSTOM PACKAGE.
                      type: string
                      enum: ["Aggregated Full Text", "Abstract and Index", "E-Book", "E-Journal", "Print", "Online Reference", "Unknown"]
                      example: Unknown
                      required: true
                    customCoverage:
                      description: |
                        Coverage dates of the custom or managed package to be updated.
                        Note that this attribute can be updated BOTH FOR CUSTOM PACKAGES AND MANAGED PACKAGES.
                      type: customCoverage
                      required: false
                    isSelected:
                      description: |
                        Selection of the managed or custom package to be updated.
                        Note that selection can be updated for BOTH CUSTOM AND MANAGED PACKAGES.
                        For custom packages, if this is set to false, it deletes the package.
                      type: boolean
                      example: true
                      required: false
                    allowKbToAddTitles:
                      description: |
                        Automatically allow KB to add titles for a managed package.
                        Note that this attribute can be updated ONLY FOR A MANAGED PACKAGE.
                      type: boolean
                      example: true
                      required: false
                    visibilityData:
                      description: |
                        Indicates whether package should be hidden or visible to patrons.
                        Note that this attribute can be updated both for CUSTOM AND MANAGED PACKAGES.
                      type: visibilityData
                      required: false
                    packageToken:
                      displayName: Package token
                      type: object
                      description: |
                        Tokens are variables in content URLs that identify the customer.
                        The token is text within the URL that needs to be replaced with an institute-specific value.
                      example: |
                        {
                          "value": "hellotoken"
                        }
                      required: false
                    proxy:
                      displayName: Proxy ID
                      type: proxy
                      required: false
          example: !include examples/packages/packages_put_request.json
      responses:
        200:
          description: OK
          body:
            application/vnd.api+json:
              example: !include examples/packages/packages_packageId_put_200_response.json
        400:
          description: Bad Request
          body:
            application/vnd.api+json:
                example: !include examples/packages/packages_packageId_put_400_response.json
        404:
          description: Not Found
          body:
            application/vnd.api+json:
              example: !include examples/packages/packages_packageId_put_404_response.json
        422:
          description: Unprocessable Entity
          body:
            application/vnd.api+json:
              example: !include examples/packages/packages_packageId_put_422_response.json
    delete:
      description: |
        Delete a specific custom package using packageId.
        Note that packageId is providerId-packageId
      responses:
        204:
          description: No Content
    /resources:
      get:
        description: Include all resources belonging to a specific package
        is: [sortable, titleFilterable]
        responses:
          200:
            description: OK
            body:
              application/vnd.api+json:
                example: !include examples/packages/packages_packageId_resources_get_200_response.json
